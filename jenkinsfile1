def DOCKER_TARGET_IMAGE_REGISTRY    = "cccportal-docker-release.artifactory.dhl.com"
def BEIMAGE                         = "${DOCKER_TARGET_IMAGE_REGISTRY}:${component}"
def OPENSHIFT_HOST                  = "https://prod1-ocp.prg-dc.dhl.com"
def OPENSHIFT_HOST_cbj              = "https://prod2-ocp.kul-dc.dhl.com"
def SERVICE_NAME_BE                 = "cccp-be"
def SERVICE_NAME_FE                 = "cccp-fe"
def DEPLOYNAMESPACE                 = "its-ccp-dmz-sit"
def DEPLOYNAMESPACE_E2E             = "exp-gccp-dmz-e2e"
def list                            = "${deploymentfiles}".split(',')
pipeline {
   agent any
   stages {
      stage('deploy sit') {
             when {
                         expression { params.environment == 'SIT' }
                     }
         steps {
             script{
	     if (params.component == 'ccp-be') {
	     dir("${component}"){
	         sh "pwd"
		 sh "ls -la"
	     if (params.deploy == 'deploynewbuildversion') {
		echo "oc set image dc/${SERVICE_NAME_BE} ${SERVICE_NAME_BE}=${BEIMAGE}:${imagetag} -n ${DEPLOYNAMESPACE}"  
            }
	    if (params.deploy == 'deploydc') {
		  for (int i = 0; i < list.size(); i++){
		  def item = list[i]
		    sh 'sleep 15'
		      echo " oc apply -f ${item}  -n ${DEPLOYNAMESPACE}"
	                               }
	                         }  
	                    }
                      }
	    if (params.component == 'ccp-fe') {
	     dir("${component}"){
	         sh "pwd"
		 sh "ls -la"
	     if (params.deploy == 'deploynewbuildversion') {
			    echo "oc set image dc/${SERVICE_NAME_FE} ${SERVICE_NAME_FE}=${BEIMAGE}:${imagetag} -n ${DEPLOYNAMESPACE}"  
            }
	    if (params.deploy == 'deploydc') {
		  for (int i = 0; i < list.size(); i++){
		  def item = list[i]
		    sh 'sleep 15'
		      echo " oc apply -f ${item}  -n ${DEPLOYNAMESPACE}"
	                               }
	                         }  
	                    }
                    }
                }  
	  }
      }
	stage('deploy e2e-prg') {
             when {
                         expression { params.environment == 'e2e-prg' }
                     }
         steps {
             script{
	          if (params.deploy == 'deploynewbuildversion') {
			    echo "oc set image dc/${SERVICE_NAME} ${SERVICE_NAME}=${BEIMAGE}:${imagetag} -n ${DEPLOYNAMESPACE_E2E}"  
            }
	    if (params.deploy == 'deploydc') {
		  for (int i = 0; i < list.size(); i++){
		  def item = list[i]
		    sh 'sleep 15'
		      echo " oc apply -f ${item}  -n ${DEPLOYNAMESPACE}"
	                }
	            }  

              }
          }
       }
       stage('deploy e2e-cbj') {
             when {
                         expression { params.environment == 'e2e-cbj' }
                     }
         steps {
             script{
	     if (params.deploy == 'deploynewbuildversion') {
			    echo "oc set image dc/${SERVICE_NAME} ${SERVICE_NAME}=${BEIMAGE}:${imagetag} -n ${DEPLOYNAMESPACE}"  
            }
	    if (params.deploy == 'deploydc') {
		  for (int i = 0; i < list.size(); i++){
		  def item = list[i]
		    sh 'sleep 15'
		      echo " oc apply -f ${item}  -n ${DEPLOYNAMESPACE}"
	   }
	       }   

              }
            }    
        }
    }
}
